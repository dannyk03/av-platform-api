version: '3.9'
services:
  platform-api:
    container_name: platform-api
    build:
      dockerfile: Dockerfile
      context: .
      # Only build development stage from our dockerfile
      target: development
      args:
        JFROG_AUTH_TOKEN: ${JFROG_AUTH_TOKEN}
    env_file:
      - .env
    environment:
      POSTGRES_HOST: postgres
      JFROG_AUTH_TOKEN: ${JFROG_AUTH_TOKEN}
    ports:
      - ${APP_PORT}:${APP_PORT}
      - 9229:9229
    networks:
      - app-network
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped
    profiles:
      - dev
    links:
      - postgres
      - redis
    depends_on:
      - postgres
      - redis
    command: >
      sh -c "yarn start:dev"

  postgres:
    container_name: postgres
    image: postgres:14.2
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      PG_DATA: /var/lib/postgresql/data
    volumes:
      - dbdata:/var/lib/postgresql/data
    networks:
      - app-network
    env_file:
      - .env
    ports:
      - ${POSTGRES_PORT}:5432
    restart: unless-stopped
    profiles:
      - dev
      - db

  redis:
    container_name: redis
    image: 'bitnami/redis:latest'
    env_file:
      - .env
    environment:
      REDIS_PORT_NUMBER: 6379
      ALLOW_EMPTY_PASSWORD: yes
      # - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL,CONFIG
    command: /opt/bitnami/scripts/redis/run.sh --maxmemory 100mb
    ports:
      - ${REDIS_PORT}:6379
    networks:
      - app-network
    restart: unless-stopped
    profiles:
      - dev
      - redis

  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    networks:
      - app-network
    restart: unless-stopped
    environment:
      - REDIS_HOSTS=local:redis:${REDIS_PORT}
    ports:
      - '8081:8081'
    depends_on:
      - redis
    profiles:
      - monitor

networks:
  app-network:
    name: app-network
    driver: bridge
volumes:
  dbdata:
