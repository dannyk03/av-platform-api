version: 2.1

orbs:
  node: circleci/node@5.0.2
  aws-ecr: circleci/aws-ecr@7.3.0

aliases:
  - &filter_deploy_only_branch
    filters:
      branches:
        only:
          - master
          - main
          - circleci-config-update-tag-build

jobs:
  build-lint-test:
    docker:
      - image: cimg/node:17.9
      - image: cimg/postgres:14.4
        environment:
          POSTGRES_DB: ${CIRCLE_PROJECT_REPONAME}
          POSTGRES_USER: ${POSTGRES_USERNAME}
          POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    environment:
      APP_ENV: production
      APP_PORT: 8080
      APP_VERSIONING: true
      APP_HTTP_ON: true
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
      POSTGRES_DB: ${CIRCLE_PROJECT_REPONAME}
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: yarn
      - run:
          name: Create test .env
          command: |
            touch .env
            echo APP_NAME="avo" >> .env
            echo APP_ENV="production" >> .env
            echo APP_MODE="secure" >> .env
            echo APP_LANGUAGE="en" >> .env
            echo APP_TZ="Asia/Jerusalem" >> .env
            echo APP_HOST="localhost" >> .env
            echo APP_PORT=" 3000" >> .env
            echo APP_VERSIONING="true" >> .env
            echo APP_VERSION="1" >> .env
            echo APP_HTTP_ON="true" >> .env
            echo APP_JOB_ON="false" >> .env
            echo MIDDLEWARE_TOLERANCE_TIMESTAMP="5m" >> .env
            echo MIDDLEWARE_TIMEOUT="30s" >> .env
            echo AUTH_SYSTEM_ADMIN_EMAIL="test@avonow.com" >> .env
            echo AUTH_SYSTEM_ADMIN_INITIAL_PASS="Avo12345!" >> .env
            echo AUTH_JWT_ACCESS_TOKEN_SECRET_KEY="123456" >> .env
            echo AUTH_JWT_ACCESS_TOKEN_EXPIRED="300m" >> .env
            echo AUTH_JWT_REFRESH_TOKEN_SECRET_KEY="01101231" >> .env
            echo AUTH_JWT_REFRESH_TOKEN_EXPIRED="7d" >> .env
            echo AUTH_JWT_REFRESH_TOKEN_REMEMBER_ME_EXPIRED="30d" >> .env
            echo AUTH_JWT_REFRESH_TOKEN_NOT_BEFORE_EXPIRATION="30m" >> .env
      - run:
          name: Run linter
          command: yarn lint
      - run:
          name: Run tests
          command: yarn test
      - run:
          name: Yarn Build
          command: yarn build
  build-and-push-image:
    docker:
      - image: cimg/base:2022.02
    steps:
      - run:
          name: 'Setup custom environment variables'
          command: |
            echo 'export CUSTOM_IMAGE_TAG="${CIRCLE_BRANCH//\//-}_${CIRCLE_SHA1:0:7}_$(git log -1 --format=%ct)"' >> $BASH_ENV
      - aws-ecr/build-and-push-image:
          remote-docker-layer-caching: true
          setup-remote-docker: true
          repo: ${CIRCLE_PROJECT_REPONAME}
          tag: ${CUSTOM_IMAGE_TAG}
          extra-build-args: '--build-arg JFROG_AUTH_TOKEN=${JFROG_AUTH_TOKEN}'

workflows:
  workflow:
    jobs:
      - build-lint-test:
          context:
            - ci-migrations-job
            - jfrog-platform
            - cloudinary
            - customerio
      - build-and-push-image:
          context:
            - eu-ecr
            - jfrog-platform
          requires:
            - build-lint-test
          <<: *filter_deploy_only_branch
